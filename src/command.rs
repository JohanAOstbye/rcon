use tokio::{
    fs::File,
    io::{AsyncBufReadExt, BufReader},
};

#[derive(Default)]
pub struct CommandHistory {
    history: Vec<String>,
    index: usize,
}

impl CommandHistory {
    pub fn new() -> Self {
        Self {
            history: Vec::new(),
            index: 0,
        }
    }

    pub fn push(&mut self, command: String) {
        self.history.push(command);
        self.index = self.history.len();
    }

    pub fn get(&mut self, index: usize) -> Option<String> {
        if index < self.history.len() {
            Some(self.history[index].clone())
        } else {
            None
        }
    }

    pub fn next(&mut self) -> Option<String> {
        if self.index < self.history.len() {
            self.index += 1;
            self.get(self.index)
        } else {
            None
        }
    }

    pub fn prev(&mut self) -> Option<String> {
        if self.index > 0 {
            self.index -= 1;
            self.get(self.index)
        } else {
            None
        }
    }
}

#[derive(Default, Clone)]
pub struct Command {
    pub name: String,
    pub args: Vec<String>,
    pub description: String,
}

impl Command {
    pub fn new(name: &str, args: Vec<String>, description: &str) -> Self {
        Self {
            name: name.to_string(),
            args: args,
            description: description.to_string(),
        }
    }
}

pub struct CommandAutoCompleter {
    commands: Vec<Command>,
}

impl CommandAutoCompleter {
    pub fn new() -> Self {
        Self {
            commands: Vec::new(),
        }
    }

    pub fn add_command(&mut self, command: Command) {
        self.commands.push(command);
    }

    pub async fn load_commands(&mut self, path: &str) {
        let file = File::open(path).await.unwrap();
        let mut lines = BufReader::new(file).lines();
        while let Some(line) = lines.next_line().await.expect("failed to read file") {
            let mut words: Vec<&str> = line.split("").collect();
            let name = words[0];
            words.drain(0..1);
            let description = words.join("");
            let command = Command::new(name, Vec::new(), &description);
            self.add_command(command);
        }
    }

    pub fn get_suggestions(&self, partial_command: &str, count: usize) -> Vec<String> {
        let mut completions = Vec::new();
        for command in self.commands.iter() {
            if completions.len() >= count {
                break;
            }
            if command.name.starts_with(partial_command) {
                completions.push(command.name.clone());
            }
        }
        log::info!("Found {} completions", completions.len());
        completions
    }

    pub fn get_suggestion(&self, partial: &str) -> Option<String> {
        for command in self.commands.iter() {
            if command.name.starts_with(partial) {
                return Some(command.name.clone());
            }
        }
        None
    }
}

impl Default for CommandAutoCompleter {
    fn default() -> Self {
        Self {
            commands: vec![
                Command::new("_resetgamestats", Vec::new(), "Erases current game stats and writes out a blank stats file Server only"),
                Command::new("ai_clear_bad_links", Vec::new(), "Clears bits set on nav links indicating link is unusable Server only"),
                Command::new("ai_debug_los", Vec::new(), "Default: 0, NPC Line- Of- Sight debug mode. If 1, solid entities that block NPC LOC will be highlighted with white bounding boxes. If 2, it'll show non-solid entities that would do it if they were solid. Requires sv_cheats 1 Server only"),
                Command::new("ai_debug_node_connect", Vec::new(), "Debug the attempted connection between two nodes Server only"),
                Command::new("ai_disable", Vec::new(), "Bi-passes all AI logic routines and puts all NP Cs into their idle animations. Can be used to get NP Cs out of your way and to test effect of AI logic routines on frame rate Requires sv_cheats 1 Server only"),
                Command::new("ai_drawbattlelines", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("ai_drop_hint", Vec::new(), "Drop an ai_hint at the player's current eye position. Requires sv_cheats 1 Server only"),
                Command::new("ai_dump_hints", Vec::new(), "Server only"),
                Command::new("ai_hull", Vec::new(), "Controls which connections are shown when ai_show_hull or ai_show_connect commands are used Arguments:	NPC name or classname, <none>=NPC under crosshair Requires sv_cheats 1 Server only"),
                Command::new("ai_next_hull", Vec::new(), "Cycles through the various hull sizes. Currently selected hull size is written to the screen. Controls which connections are shown when ai_show_hull or ai_show_connect commands are used Arguments:	-none- Requires sv_cheats 1 Server only"),
                Command::new("ai_nodes", Vec::new(), "Toggles node display. First call displays the nodes for the given network as green objects. Second call  displays the nodes and their I Ds. Nodes are color coded as follows: Green		- ground node Cyan		- air node Magenta	- climb node Grey		- node not available for selected hull size Orange 	- node currently locked Requires sv_cheats 1 Server only"),
                Command::new("ai_report_task_timings_on_limit", Vec::new(), "Default: 0 Server only"),
                Command::new("ai_resume", Vec::new(), "If NPC is stepping through tasks (see ai_step ) will resume normal processing. Requires sv_cheats 1 Server only"),
                Command::new("ai_set_move_height_epsilon", Vec::new(), "Set how high AI bumps up ground walkers when checking steps Server only"),
                Command::new("ai_setenabled", Vec::new(), "Like ai_disable but you manually specify the state (with a 0 or 1) instead of toggling it. Requires sv_cheats 1 Server only"),
                Command::new("ai_show_connect", Vec::new(), "Displays the allowed connections between each node for the currently selected hull type. Hulls are color code as follows: Green		- ground movement Blue		- jumping movement Cyan		- flying movement Yellow		- crawling movement Magenta	- climbing movement Red		- connection disabled Requires sv_cheats 1 Server only"),
                Command::new("ai_show_connect_crawl", Vec::new(), "Displays the allowed connections between each node for the currently selected hull type. Hulls are color code as follows: Green		- ground movement Blue		- jumping movement Cyan		- flying movement Yellow		- crawling movement Magenta	- climbing movement Red		- connection disabled Requires sv_cheats 1 Server only"),
                Command::new("ai_show_connect_fly", Vec::new(), "Displays the allowed connections between each node for the currently selected hull type. Hulls are color code as follows: Green		- ground movement Blue		- jumping movement Cyan		- flying movement Yellow		- crawling movement Magenta	- climbing movement Red		- connection disabled Requires sv_cheats 1 Server only"),
                Command::new("ai_show_connect_jump", Vec::new(), "Displays the allowed connections between each node for the currently selected hull type. Hulls are color code as follows: Green		- ground movement Blue		- jumping movement Cyan		- flying movement Yellow		- crawling movement Magenta	- climbing movement Red		- connection disabled Requires sv_cheats 1 Server only"),
                Command::new("ai_show_graph_connect", Vec::new(), "Toggles graph connection display for the node that the player is looking at. Nodes that are connected to the selected node by the net graph will be drawn in red with magenta lines connecting to the selected node. Nodes that are not connected via the net graph from the selected node will be drawn in blue. Requires sv_cheats 1 Server only"),
                Command::new("ai_show_grid", Vec::new(), "Draw a grid on the floor where looking. Requires sv_cheats 1 Server only"),
                Command::new("ai_show_hints", Vec::new(), "Displays all hints as small boxes Blue		- hint is available for use Red		- hint is currently being used by an NPC Orange		- hint not being used by timed out Grey		- hint has been disabled Requires sv_cheats 1 Server only"),
                Command::new("ai_show_hull", Vec::new(), "Displays the allowed hulls between each node for the currently selected hull type. Hulls are color code as follows: Green		- ground movement Blue		- jumping movement Cyan		- flying movement Yellow		- crawling movement Magenta	- climbing movement Arguments: 	-none- Requires sv_cheats 1 Server only"),
                Command::new("ai_show_node", Vec::new(), "Highlight the specified node Requires sv_cheats 1 Server only Modified in v1.34.6.6"),
                Command::new("ai_show_visibility", Vec::new(), "Toggles visibility display for the node that the player is looking at. Nodes that are visible from the selected node will be drawn in red with yellow lines connecting to the selected node. Nodes that are not visible from the selected node will be drawn in blue. Requires sv_cheats 1 Server only"),
                Command::new("ai_step", Vec::new(), "NP Cs will freeze after completing their current task. To complete the next task, use 'ai_step' again. To resume processing normally use 'ai_resume' Requires sv_cheats 1 Server only"),
                Command::new("ai_test_los", Vec::new(), "Test AI LOS from the player's POV Server only"),
                Command::new("ai_think_limit_label", Vec::new(), "Default: 0 Server only"),
                Command::new("ai_vehicle_avoidance", Vec::new(), "Default: 1 Requires sv_cheats 1 Server only"),
                Command::new("ainet_generate_report", Vec::new(), "Generate a report to the console. Server only"),
                Command::new("ainet_generate_report_only", Vec::new(), "Generate a report to the console. Server only"),
                Command::new("air_density", Vec::new(), "Changes the density of air for drag computations. Requires sv_cheats 1 Server only"),
                Command::new("bot_add", Vec::new(), "bot_add <t|ct> <type> <difficulty> <name> - Adds a bot matching the given criteria. Server only"),
                Command::new("bot_add_ct", Vec::new(), "bot_add_ct <type> <difficulty> <name> - Adds a Counter- Terrorist bot matching the given criteria. Server only"),
                Command::new("bot_add_t", Vec::new(), "bot_add_t <type> <difficulty> <name> - Adds a terrorist bot matching the given criteria. Server only"),
                Command::new("bot_all_weapons", Vec::new(), "Allows the bots to use all weapons Server only"),
                Command::new("bot_chatter", Vec::new(), "Default: normal Control how bots talk. Allowed values: 'off', 'radio', 'minimal', or 'normal'. Server only"),
                Command::new("bot_crouch", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("bot_debug", Vec::new(), "Default: 0 For internal testing purposes. Requires sv_cheats 1 Server only"),
                Command::new("bot_debug_target", Vec::new(), "Default: 0 For internal testing purposes. Requires sv_cheats 1 Server only"),
                Command::new("bot_defer_to_human_goals", Vec::new(), "Default: 0 If nonzero and there is a human on the team, the bots will not do the scenario tasks. Server only"),
                Command::new("bot_defer_to_human_items", Vec::new(), "Default: 1 If nonzero and there is a human on the team, the bots will not get scenario items. Server only"),
                Command::new("bot_difficulty", Vec::new(), "Default: 1 Defines the skill of bots joining the game. Values are: 0 =easy, 1=normal, 2=hard, 3=expert. Server only"),
                Command::new("bot_dont_shoot", Vec::new(), "Default: 0 If nonzero, bots will not fire weapons (for debugging). Requires sv_cheats 1 Server only"),
                Command::new("bot_freeze", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("bot_goto_mark", Vec::new(), "Sends a bot to the marked nav area (useful for testing navigation meshes) Requires sv_cheats 1 Server only"),
                Command::new("bot_goto_selected", Vec::new(), "Sends a bot to the selected nav area (useful for testing navigation meshes) Requires sv_cheats 1 Server only"),
                Command::new("bot_join_after_player", Vec::new(), "Default: 1 If nonzero, bots wait until a player joins before entering the game. Server only"),
                Command::new("bot_join_team", Vec::new(), "Default: any Determines the team bots will join into. Allowed values: 'any', 'T', or 'CT'. Server only"),
                Command::new("bot_kick", Vec::new(), "bot_kick <all> <t|ct> <type> <difficulty> <name> - Kicks a specific bot, or all bots, matching the given criteria. Server only"),
                Command::new("bot_kill", Vec::new(), "bot_kill <all> <t|ct> <type> <difficulty> <name> - Kills a specific bot, or all bots, matching the given criteria. Requires sv_cheats 1 Server only"),
                Command::new("bot_knives_only", Vec::new(), "Restricts the bots to only using knives Server only"),
                Command::new("bot_loadout", Vec::new(), "Default: bots are given these items at round start Requires sv_cheats 1 Server only"),
                Command::new("bot_max_vision_distance_override", Vec::new(), "Default: -1 Min: -1 Max distance bots can see targets. Requires sv_cheats 1 Server only"),
                Command::new("bot_mimic", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("bot_mimic_yaw_offset", Vec::new(), "Default: 180 Requires sv_cheats 1 Server only"),
                Command::new("bot_pistols_only", Vec::new(), "Restricts the bots to only using pistols Server only"),
                Command::new("bot_place", Vec::new(), "bot_place - Places a bot from the map at where the local player is pointing. Requires sv_cheats 1 Server only"),
                Command::new("bot_quota", Vec::new(), "Default: 10 Determines the total number of bots in the game. Server only"),
                Command::new("bot_quota_mode", Vec::new(), "Default: normal Determines the type of quota. Allowed values: 'normal', 'fill', and 'match'. If 'fill', the server will adjust bots to keep N players in the game, where N is bot_quota. If 'match', the server will maintain a 1:N ratio of humans to bots, where N is bot_quota. Server only"),
                Command::new("bot_randombuy", Vec::new(), "Default: 0 should bots ignore their prefered weapons and just buy weapons at random? Requires sv_cheats 1 Server only"),
                Command::new("bot_show_battlefront", Vec::new(), "Default: 0 Show areas where rushing players will initially meet. Requires sv_cheats 1 Server only"),
                Command::new("bot_show_nav", Vec::new(), "Default: 0 For internal testing purposes. Requires sv_cheats 1 Server only"),
                Command::new("bot_show_occupy_time", Vec::new(), "Default: 0 Show when each nav area can first be reached by each team. Requires sv_cheats 1 Server only"),
                Command::new("bot_snipers_only", Vec::new(), "Restricts the bots to only using sniper rifles Server only"),
                Command::new("bot_stop", Vec::new(), "Default: 0 If nonzero, immediately stops all bot processing. Requires sv_cheats 1 Server only"),
                Command::new("bot_traceview", Vec::new(), "Default: 0 For internal testing purposes. Requires sv_cheats 1 Server only"),
                Command::new("bot_zombie", Vec::new(), "Default: 0 If nonzero, bots will stay in idle mode and not attack. Requires sv_cheats 1 Server only"),
                Command::new("buddha", Vec::new(), "Toggle. Player takes damage but won't die. ( Shows red cross when health is zero) Requires sv_cheats 1 Server only"),
                Command::new("bug_swap", Vec::new(), "Automatically swaps the current weapon for the bug bait and back again. Requires sv_cheats 1 Server only"),
                Command::new("buyrandom", Vec::new(), "Buy random primary and secondary. Primarily for deathmatch where cost is not an issue. Server only"),
                Command::new("callvote", Vec::new(), "Start a vote on an issue. Server only"),
                Command::new("cast_hull", Vec::new(), "Tests hull collision detection Requires sv_cheats 1 Server only"),
                Command::new("cast_ray", Vec::new(), "Tests collision detection Requires sv_cheats 1 Server only"),
                Command::new("ch_createairboat", Vec::new(), "Spawn airboat in front of the player. Requires sv_cheats 1 Server only"),
                Command::new("ch_createjeep", Vec::new(), "Spawn jeep in front of the player. Requires sv_cheats 1 Server only"),
                Command::new("chet_debug_idle", Vec::new(), "Default: 0 If set one, many debug prints to help track down the TLK_IDLE issue. Set two for super verbose info Server only"),
                Command::new("cl_csm_server_status", Vec::new(), "Usage: cl_csm_server_status Server only"),
                Command::new("clear_debug_overlays", Vec::new(), "clears debug overlays Server only"),
                Command::new("collision_test", Vec::new(), "Tests collision system Requires sv_cheats 1 Server only"),
                Command::new("commentary_cvarsnotchanging", Vec::new(), "Server only"),
                Command::new("commentary_finishnode", Vec::new(), "Server only"),
                Command::new("computer_name", Vec::new(), "Spew computer name Server only"),
                Command::new("create_flashlight", Vec::new(), "Requires sv_cheats 1 Server only"),
                Command::new("Create Prediction Error", Vec::new(), "Create a prediction error Requires sv_cheats 1 Server only"),
                Command::new("creditsdone", Vec::new(), "Server only"),
                Command::new("cs_enable_player_physics_box", Vec::new(), "Default: 0 Server only"),
                Command::new("cs_hostage_near_rescue_music_distance", Vec::new(), "Default: 2000 Requires sv_cheats 1 Server only"),
                Command::new("cs_make_vip", Vec::new(), "Marks a player as the VIP Server only"),
                Command::new("cs_ Show State Transitions", Vec::new(), "Default: -2 cs_ Show State Transitions <ent index or -1 for all>. Show player state transitions. Requires sv_cheats 1 Server only"),
                Command::new("CS_ Warn Friendly Damage Interval", Vec::new(), "Default: 3.0 Defines how frequently the server notifies clients that a player damaged a friend Requires sv_cheats 1 Server only"),
                Command::new("custom_bot_difficulty", Vec::new(), "Default: 0 Bot difficulty for offline play. Server only Client only command"),
                Command::new("dbghist_addline", Vec::new(), "Add a line to the debug history. Format: <category id> <line> Server only"),
                Command::new("dbghist_dump", Vec::new(), "Dump the debug history to the console. Format: <category id> Categories:     0: Entity I/O     1: AI Decisions     2: Scene Print     3: Alyx Blind     4: Log of damage done to player Server only"),
                Command::new("debug_visibility_monitor", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("dm_reset_spawns", Vec::new(), "Server only"),
                Command::new("drawcross", Vec::new(), "Draws a cross at the given location Arguments: x y z Requires sv_cheats 1 Server only"),
                Command::new("drawline", Vec::new(), "Draws line between two 3D Points. Green if no collision Red is collides with something Arguments: x1 y1 z1 x2 y2 z2 Requires sv_cheats 1 Server only"),
                Command::new("ds_get_newest_subscribed_files", Vec::new(), "Re-reads web api auth key and subscribed file lists from disk and downloads the latest updates of those files from steam Server only"),
                Command::new("dump_entity_sizes", Vec::new(), "Print sizeof(entclass) Server only"),
                Command::new("dump_globals", Vec::new(), "Dump all global entities/states Server only"),
                Command::new("dumpentityfactories", Vec::new(), "Lists all entity factory names. Server only"),
                Command::new("dumpeventqueue", Vec::new(), "Dump the contents of the Entity I/O event queue to the console. Server only"),
                Command::new("dumpgamestringtable", Vec::new(), "Dump the contents of the game string table to the console. Requires sv_cheats 1 Server only"),
                Command::new("enable_debug_overlays", Vec::new(), "Default: 1 Enable rendering of debug overlays Requires sv_cheats 1 Server only"),
                Command::new("endround", Vec::new(), "End the current round. Requires sv_cheats 1 Server only"),
                Command::new("ent_absbox", Vec::new(), "Displays the total bounding box for the given entity(s) in green. Some entites will also display entity specific overlays. Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("ent_attachments", Vec::new(), "Displays the attachment points on an entity. Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("ent_autoaim", Vec::new(), "Displays the entity's autoaim radius. Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("ent_bbox", Vec::new(), "Displays the movement bounding box for the given entity(ies) in orange. Some entites will also display entity specific overlays. Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("ent_cancelpendingentfires", Vec::new(), "Cancels all ent_fire created outputs that are currently waiting for their delay to expire. Server only"),
                Command::new("ent_create", Vec::new(), "Creates an entity of the given type where the player is looking. Requires sv_cheats 1 Server only"),
                Command::new("ent_dump", Vec::new(), "Usage:   ent_dump <entity name> Requires sv_cheats 1 Server only"),
                Command::new("ent_fire", Vec::new(), "Usage:   ent_fire <target> [action] [value] [delay] Requires sv_cheats 1 Server only"),
                Command::new("ent_info", Vec::new(), "Usage:   ent_info <class name> Requires sv_cheats 1 Server only"),
                Command::new("ent_keyvalue", Vec::new(), "Applies the comma delimited key=value pairs to the entity with the given Hammer ID. Format: ent_keyvalue <entity id> <key1>=<value1>,<key2>=<value2>,...,<keyN>=<valueN> Requires sv_cheats 1 Server only"),
                Command::new("ent_messages", Vec::new(), "Toggles input/output message display for the selected entity(ies). The name of the entity will be displayed as well as any messages that it sends or receives. Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("ent_messages_draw", Vec::new(), "Default: 0 Visualizes all entity input/output activity. Requires sv_cheats 1 Server only"),
                Command::new("ent_name", Vec::new(), "Requires sv_cheats 1 Server only"),
                Command::new("ent_orient", Vec::new(), "Orient the specified entity to match the player's angles. By default, only orients target entity's YAW. Use the 'allangles' option to orient on all axis. Format: ent_orient <entity name> <optional: allangles> Requires sv_cheats 1 Server only"),
                Command::new("ent_pause", Vec::new(), "Toggles pausing of input/output message processing for entities. When turned on processing of all message will stop. Any messages displayed with 'ent_messages' will stop fading and be displayed indefinitely. To step through the messages one by one use 'ent_step'. Requires sv_cheats 1 Server only"),
                Command::new("ent_pivot", Vec::new(), "Displays the pivot for the given entity(ies).(y=up=green, z=forward=blue, x=left=red). Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("ent_rbox", Vec::new(), "Displays the total bounding box for the given entity(s) in green. Some entites will also display entity specific overlays. Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("ent_remove", Vec::new(), "Removes the given entity(s) Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("ent_remove_all", Vec::new(), "Removes all entities of the specified type Arguments:   	{entity_name} / {class_name} Requires sv_cheats 1 Server only"),
                Command::new("ent_rotate", Vec::new(), "Rotates an entity by a specified # of degrees Requires sv_cheats 1 Server only"),
                Command::new("ent_script_dump", Vec::new(), "Dumps the names and values of this entity's script scope to the console Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("ent_setang", Vec::new(), "Set entity angles Requires sv_cheats 1 Server only"),
                Command::new("ent_setname", Vec::new(), "Sets the targetname of the given entity(s) Arguments:   	{new entity name} {entity_name} / {class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("ent_setpos", Vec::new(), "Move entity to position Requires sv_cheats 1 Server only"),
                Command::new("ent_show_response_criteria", Vec::new(), "Print, to the console, an entity's current criteria set used to select responses. Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("ent_step", Vec::new(), "When 'ent_pause' is set this will step through one waiting input / output message at a time. Requires sv_cheats 1 Server only"),
                Command::new("ent_teleport", Vec::new(), "Teleport the specified entity to where the player is looking. Format: ent_teleport <entity name> Requires sv_cheats 1 Server only"),
                Command::new("ent_text", Vec::new(), "Displays text debugging information about the given entity(ies) on top of the entity ( See Overlay Text) Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("ent_viewoffset", Vec::new(), "Displays the eye position for the given entity(ies) in red. Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("explode", Vec::new(), "Kills the player with explosive damage Server only"),
                Command::new("explodevector", Vec::new(), "Kills a player applying an explosive force. Usage: explodevector <player> <x value> <y value> <z value> Server only"),
                Command::new("fadein", Vec::new(), "fadein {time r g b}: Fades the screen in from black or from the specified color over the given number of seconds. Requires sv_cheats 1 Server only"),
                Command::new("fadeout", Vec::new(), "fadeout {time r g b}: Fades the screen to black or to the specified color over the given number of seconds. Requires sv_cheats 1 Server only"),
                Command::new("find_ent", Vec::new(), "Find and list all entities with classnames or targetnames that contain the specified substring. Format: find_ent <substring> Requires sv_cheats 1 Server only"),
                Command::new("find_ent_index", Vec::new(), "Display data for entity matching specified index. Format: find_ent_index <index> Requires sv_cheats 1 Server only"),
                Command::new("firetarget", Vec::new(), "Requires sv_cheats 1 Server only"),
                Command::new("fish_dormant", Vec::new(), "Default: 0 Turns off interactive fish behavior. Fish become immobile and unresponsive. Requires sv_cheats 1 Server only"),
                Command::new("foundry_engine_get_mouse_control", Vec::new(), "Give the engine control of the mouse. Requires sv_cheats 1 Server only"),
                Command::new("foundry_engine_release_mouse_control", Vec::new(), "Give the control of the mouse back to Hammer. Requires sv_cheats 1 Server only"),
                Command::new("foundry_select_entity", Vec::new(), "Select the entity under the crosshair or select entities with the specified name. Requires sv_cheats 1 Server only"),
                Command::new("foundry_sync_hammer_view", Vec::new(), "Move Hammer's 3D view to the same position as the engine's 3D view. Requires sv_cheats 1 Server only"),
                Command::new("foundry_update_entity", Vec::new(), "Updates the entity's position/angles when in edit mode Requires sv_cheats 1 Server only"),
                Command::new("fx_new_sparks", Vec::new(), "Default: 1 Use new style sparks. Requires sv_cheats 1 Server only"),
                Command::new("g_debug_angularsensor", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("g_debug_constraint_sounds", Vec::new(), "Default: 0 Enable debug printing about constraint sounds. Requires sv_cheats 1 Server only"),
                Command::new("g_debug_trackpather", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("g_debug_vehiclebase", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("g_debug_vehicledriver", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("g_debug_vehicleexit", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("g_debug_vehiclesound", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("g_jeepexitspeed", Vec::new(), "Default: 100 Requires sv_cheats 1 Server only"),
                Command::new("game_mode", Vec::new(), "Default: 0 The current game mode (based on game type). See Game Modes.txt. Server only Client only command"),
                Command::new("game_type", Vec::new(), "Default: 0 The current game type. See Game Modes.txt. Server only Client only command"),
                Command::new("give", Vec::new(), "Give item to player. Arguments: <item_name> Server only"),
                Command::new("givecurrentammo", Vec::new(), "Give a supply of ammo for current weapon.. Requires sv_cheats 1 Server only"),
                Command::new("global_event_log_enabled", Vec::new(), "Default: 0 Enables the global event log system Requires sv_cheats 1 Server only"),
                Command::new("global_set", Vec::new(), "global_set <globalname> <state>: Sets the state of the given env_global (0 = OFF, 1 = ON, 2 = DEAD). Requires sv_cheats 1 Server only"),
                Command::new("god", Vec::new(), "Toggle. Player becomes invulnerable. Requires sv_cheats 1 Server only"),
                Command::new("gods", Vec::new(), "Toggle. All players become invulnerable. Requires sv_cheats 1 Server only"),
                Command::new("groundlist", Vec::new(), "Display ground entity list <index> Server only"),
                Command::new("hammer_update_entity", Vec::new(), "Updates the entity's position/angles when in edit mode Server only"),
                Command::new("hammer_update_safe_entities", Vec::new(), "Updates entities in the map that can safely be updated (don't have parents or are affected by constraints). Also excludes entities mentioned in any hammer_updateignorelist objects in this map. Server only"),
                Command::new("host_workshop_collection", Vec::new(), "Get the latest version of maps in a workshop collection and host them as a maplist. Server only"),
                Command::new("host_workshop_map", Vec::new(), "Get the latest version of the map and host it on this server. Server only"),
                Command::new("hostage_debug", Vec::new(), "Default: 0 Show hostage AI debug information Requires sv_cheats 1 Server only"),
                Command::new("hostfile", Vec::new(), "Default: host.txt The HOST file to load. Server only"),
                Command::new("hurtme", Vec::new(), "Hurts the player. Arguments: <health to lose> Requires sv_cheats 1 Server only"),
                Command::new("inferno_child_spawn_interval_multiplier", Vec::new(), "Default: 0.1 Amount spawn interval increases for each child Requires sv_cheats 1 Server only"),
                Command::new("inferno_child_spawn_max_depth", Vec::new(), "Default: 4 Requires sv_cheats 1 Server only"),
                Command::new("inferno_damage", Vec::new(), "Default: 40 Damage per second Requires sv_cheats 1 Server only"),
                Command::new("inferno_debug", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("inferno_flame_lifetime", Vec::new(), "Default: 7 Average lifetime of each flame in seconds Requires sv_cheats 1 Server only"),
                Command::new("inferno_flame_spacing", Vec::new(), "Default: 42 Minimum distance between separate flame spawns Requires sv_cheats 1 Server only"),
                Command::new("inferno_forward_reduction_factor", Vec::new(), "Default: 0.9 Requires sv_cheats 1 Server only"),
                Command::new("inferno_friendly_fire_duration", Vec::new(), "Default: 6 For this long, FF is credited back to the thrower. Requires sv_cheats 1 Server only"),
                Command::new("inferno_initial_spawn_interval", Vec::new(), "Default: 0.02 Time between spawning flames for first fire Requires sv_cheats 1 Server only"),
                Command::new("inferno_max_child_spawn_interval", Vec::new(), "Default: 0.5 Largest time interval for child flame spawning Requires sv_cheats 1 Server only"),
                Command::new("inferno_max_flames", Vec::new(), "Default: 16 Maximum number of flames that can be created Requires sv_cheats 1 Server only"),
                Command::new("inferno_max_range", Vec::new(), "Default: 150 Maximum distance flames can spread from their initial ignition point Requires sv_cheats 1 Server only"),
                Command::new("inferno_per_flame_spawn_duration", Vec::new(), "Default: 3 Duration each new flame will attempt to spawn new flames Requires sv_cheats 1 Server only"),
                Command::new("inferno_scorch_decals", Vec::new(), "Default: 1 Requires sv_cheats 1 Server only"),
                Command::new("inferno_spawn_angle", Vec::new(), "Default: 45 Angular change from parent Requires sv_cheats 1 Server only"),
                Command::new("inferno_surface_offset", Vec::new(), "Default: 20 Requires sv_cheats 1 Server only"),
                Command::new("inferno_velocity_decay_factor", Vec::new(), "Default: 0.2 Requires sv_cheats 1 Server only"),
                Command::new("inferno_velocity_factor", Vec::new(), "Default: 0.003 Requires sv_cheats 1 Server only"),
                Command::new("inferno_velocity_normal_factor", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("kdtree_test", Vec::new(), "Tests spatial partition for entities queries. Requires sv_cheats 1 Server only"),
                Command::new("kill", Vec::new(), "Kills the player with generic damage Server only"),
                Command::new("killvector", Vec::new(), "Kills a player applying force. Usage: killvector <player> <x value> <y value> <z value> Server only"),
                Command::new("listissues", Vec::new(), "List all the issues that can be voted on. Server only"),
                Command::new("list RecentNPC Speech", Vec::new(), "Displays a list of the last 5 lines of speech from NP Cs. Server only"),
                Command::new("loopsingleplayermaps", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("map_setbombradius", Vec::new(), "Sets the bomb radius for the map. Requires sv_cheats 1 Server only"),
                Command::new("map_showbombradius", Vec::new(), "Shows bomb radius from the center of each bomb site and planted bomb. Requires sv_cheats 1 Server only"),
                Command::new("map_showspawnpoints", Vec::new(), "Shows player spawn points (red=invalid). Optionally pass in the duration. Server only"),
                Command::new("motdfile", Vec::new(), "Default: motd.txt The MOTD file to load. Server only"),
                Command::new("mp_autokick", Vec::new(), "Default: 1 Kick idle/team-killing/team-damaging players Server only"),
                Command::new("mp_autoteambalance", Vec::new(), "Default: 1 Server only"),
                Command::new("mp_backup_restore_list_files", Vec::new(), "Lists recent backup round files matching the prefix, most recent files first, accepts a numeric parameter to limit the number of files displayed Server only"),
                Command::new("mp_backup_restore_load_autopause", Vec::new(), "Default: 1 Whether to automatically pause the match after restoring round data from backup Server only New in v1.33.1.0"),
                Command::new("mp_backup_restore_load_file", Vec::new(), "Loads player cash, KDA, scores and team scores; resets to the next round after the backup Server only"),
                Command::new("mp_backup_round_auto", Vec::new(), "Default: 1 If enabled will keep in-memory backups to handle reconnecting players even if the backup files aren't written to disk Server only New in v1.34.0.0"),
                Command::new("mp_backup_round_file", Vec::new(), "Default: backup If set then server will save all played rounds information to files filename_date_time_team1_team2_mapname_roundnum_score1_score2.txt Server only"),
                Command::new("mp_backup_round_file_last", Vec::new(), "Default: Every time a backup file is written the value of this convar gets updated to hold the name of the backup file. Server only"),
                Command::new("mp_backup_round_file_pattern", Vec::new(), "Default: %prefix%_round%round%.txt If set then server will save all played rounds information to files named by this pattern, e.g.'%prefix%_%date%_%time%_%team1%_%team2%_%map%_round%round%_score_%score1%_%score2%.txt' Server only"),
                Command::new("mp_competitive_endofmatch_extra_time", Vec::new(), "Default: 15 After a competitive match finishes rematch voting extra time is given for rankings. Server only"),
                Command::new("mp_deathcam_skippable", Vec::new(), "Default: 1 Determines whether a player can early-out of the deathcam. Server only New in v1.33.3.0"),
                Command::new("mp_disable_autokick", Vec::new(), "Prevents a userid from being auto-kicked Server only"),
                Command::new("mp_dm_bonus_length_max", Vec::new(), "Default: 30 Maximum time the bonus time will last (in seconds) Server only"),
                Command::new("mp_dm_bonus_length_min", Vec::new(), "Default: 30 Minimum time the bonus time will last (in seconds) Server only"),
                Command::new("mp_dm_time_between_bonus_max", Vec::new(), "Default: 40 Maximum time a bonus time will start after the round start or after the last bonus (in seconds) Server only"),
                Command::new("mp_dm_time_between_bonus_min", Vec::new(), "Default: 30 Minimum time a bonus time will start after the round start or after the last bonus (in seconds) Server only"),
                Command::new("mp_dump_timers", Vec::new(), "Prints round timers to the console for debugging Server only"),
                Command::new("mp_forcerespawnplayers", Vec::new(), "Force all players to respawn. Requires sv_cheats 1 Server only"),
                Command::new("mp_forcewin", Vec::new(), "Forces team to win Requires sv_cheats 1 Server only"),
                Command::new("mp_freezetime", Vec::new(), "Default: 6 Min: 0 , Max: 60how many seconds to keep players frozen when the round starts Server only"),
                Command::new("mp_hostages_max", Vec::new(), "Default: 2 Maximum number of hostages to spawn. Server only"),
                Command::new("mp_hostages_run_speed_modifier", Vec::new(), "Default: 1.0 Min: 0 .1, Max: 1.5 Default is 1.0, slow down hostages by setting this to < 1.0. Server only"),
                Command::new("mp_hostages_spawn_farthest", Vec::new(), "Default: 0 When enabled will consistently force the farthest hostages to spawn. Server only"),
                Command::new("mp_hostages_spawn_force_positions", Vec::new(), "Default: Comma separated list of zero based indices to force spawn positions, e.g. '0,2' or '1,6' Server only"),
                Command::new("mp_hostages_spawn_same_every_round", Vec::new(), "Default: 10 = spawn hostages randomly every round, 1 = same spawns for entire match. Server only"),
                Command::new("mp_humanteam", Vec::new(), "Default: any Restricts human players to a single team {any, CT, T} Server only"),
                Command::new("mp_ignore_round_win_conditions", Vec::new(), "Default: 0 Ignore conditions which would end the current round Server only"),
                Command::new("mp_limitteams", Vec::new(), "Default: 2 Min: 0 , Max: 30 Max # of players 1 team can have over another (0 disables check) Server only"),
                Command::new("mp_logdetail", Vec::new(), "Default: 0 Min: 0 , Max: 3 Logs attacks. Values are: 0 =off, 1=enemy, 2=teammate, 3=both) Server only"),
                Command::new("mp_pause_match", Vec::new(), "Pause the match in the next freeze time Server only"),
                Command::new("mp_restartgame", Vec::new(), "Default: 0 If non-zero, game will restart in the specified number of seconds Server only"),
                Command::new("mp_roundtime", Vec::new(), "Default: 5 Min: 1, Max: 60 How many minutes each round takes. Server only"),
                Command::new("mp_roundtime_defuse", Vec::new(), "Default: 0 Min: 0 , Max: 60 How many minutes each round of Bomb Defuse takes. If 0 then use mp_roundtime instead. Server only"),
                Command::new("mp_roundtime_hostage", Vec::new(), "Default: 0 Min: 0 , Max: 60 How many minutes each round of Hostage Rescue takes. If 0 then use mp_roundtime instead. Server only"),
                Command::new("mp_scrambleteams", Vec::new(), "Scramble the teams and restart the game Server only"),
                Command::new("mp_spawnprotectiontime", Vec::new(), "Default: 5 Kick players who team-kill within this many seconds of a round restart. Server only"),
                Command::new("mp_swapteams", Vec::new(), "Swap the teams and restart the game Server only"),
                Command::new("mp_switchteams", Vec::new(), "Switch teams and restart the game Server only"),
                Command::new("mp_td_dmgtokick", Vec::new(), "Default: 300 The damage threshhold players have to exceed in a match to get kicked. Server only"),
                Command::new("mp_td_dmgtowarn", Vec::new(), "Default: 200 The damage threshhold players have to exceed in a match to get warned that they are about to be kicked. Server only"),
                Command::new("mp_td_spawndmgthreshold", Vec::new(), "Default: 50 The damage threshold players have to exceed at the start of the round to be warned/kick. Server only"),
                Command::new("mp_teamflag_1", Vec::new(), "Default: Enter a country's alpha 2 code to show that flag next to team 1's name in the spectator scoreboard. Server only"),
                Command::new("mp_teamflag_2", Vec::new(), "Default: Enter a country's alpha 2 code to show that flag next to team 2's name in the spectator scoreboard. Server only"),
                Command::new("mp_teamlogo_1", Vec::new(), "Default: Enter a team's shorthand image name to display their logo. Images can be found here: 'resource/flash/econ/tournaments/teams' Server only New in v1.34.7.2"),
                Command::new("mp_teamlogo_2", Vec::new(), "Default: Enter a team's shorthand image name to display their logo. Images can be found here: 'resource/flash/econ/tournaments/teams' Server only New in v1.34.7.2"),
                Command::new("mp_teammatchstat_1", Vec::new(), "Default: A non-empty string sets first team's match stat. Server only New in v1.34.4.0"),
                Command::new("mp_teammatchstat_2", Vec::new(), "Default: A non-empty string sets second team's match stat. Server only New in v1.34.4.0"),
                Command::new("mp_teammatchstat_cycletime", Vec::new(), "Default: 45 Cycle match stats after so many seconds Server only New in v1.34.4.1"),
                Command::new("mp_teammatchstat_holdtime", Vec::new(), "Default: 5 Decide on a match stat and hold it additionally for at least so many seconds Server only New in v1.34.4.1"),
                Command::new("mp_teammatchstat_txt", Vec::new(), "Default: A non-empty string sets the match stat description, e.g. ' Match 2 of 3'. Server only New in v1.34.4.0"),
                Command::new("mp_teamname_1", Vec::new(), "Default: A non-empty string overrides the first team's name. Server only"),
                Command::new("mp_teamname_2", Vec::new(), "Default: A non-empty string overrides the second team's name. Server only"),
                Command::new("mp_teamprediction_pct", Vec::new(), "Default: 0 A value between 1 and 99 will show predictions in favor of CT team. Server only New in v1.34.4.0 Modified in v1.34.4.1"),
                Command::new("mp_teamprediction_txt", Vec::new(), "Default: #SFUIHUD_ Spectate_ Predictions A value between 1 and 99 will set predictions in favor of first team. Server only New in v1.34.4.0"),
                Command::new("mp_tkpunish", Vec::new(), "Default: 0 Will TK'ers and team damagers be punished in the next round?  {0=no,  1=yes} Server only"),
                Command::new("mp_tournament_restart", Vec::new(), "Restart Tournament Mode on the current level. Server only"),
                Command::new("mp_unpause_match", Vec::new(), "Resume the match Server only"),
                Command::new("mp_warmup_end", Vec::new(), "End warmup immediately. Server only"),
                Command::new("mp_warmup_start", Vec::new(), "Start warmup. Server only"),
                Command::new("nav_add_to_selected_set", Vec::new(), "Add current area to the selected set. Requires sv_cheats 1 Server only"),
                Command::new("nav_add_to_selected_set_by_id", Vec::new(), "Add specified area id to the selected set. Requires sv_cheats 1 Server only"),
                Command::new("nav_analyze", Vec::new(), "Re-analyze the current Navigation Mesh and save it to disk. Requires sv_cheats 1 Server only"),
                Command::new("nav_analyze_scripted", Vec::new(), "commandline hook to run a nav_analyze and then quit. Requires sv_cheats 1 Server only"),
                Command::new("nav_area_bgcolor", Vec::new(), "Default: 0 0 0 30RGBA color to draw as the background color for nav areas while editing. Requires sv_cheats 1 Server only"),
                Command::new("nav_area_max_size", Vec::new(), "Default: 50 Max area size created in nav generation Requires sv_cheats 1 Server only"),
                Command::new("nav_avoid", Vec::new(), "Toggles the 'avoid this area when possible' flag used by the AI system. Requires sv_cheats 1 Server only"),
                Command::new("nav_begin_area", Vec::new(), "Defines a corner of a new Area or Ladder. To complete the Area or Ladder, drag the opposite corner to the desired location and issue a 'nav_end_area' command. Requires sv_cheats 1 Server only"),
                Command::new("nav_begin_deselecting", Vec::new(), "Start continuously removing from the selected set. Requires sv_cheats 1 Server only"),
                Command::new("nav_begin_drag_deselecting", Vec::new(), "Start dragging a selection area. Requires sv_cheats 1 Server only"),
                Command::new("nav_begin_drag_selecting", Vec::new(), "Start dragging a selection area. Requires sv_cheats 1 Server only"),
                Command::new("nav_begin_selecting", Vec::new(), "Start continuously adding to the selected set. Requires sv_cheats 1 Server only"),
                Command::new("nav_begin_shift_xy", Vec::new(), "Begin shifting the Selected Set. Requires sv_cheats 1 Server only"),
                Command::new("nav_build_ladder", Vec::new(), "Attempts to build a nav ladder on the climbable surface under the cursor. Requires sv_cheats 1 Server only"),
                Command::new("nav_check_connectivity", Vec::new(), "Checks to be sure every (or just the marked) nav area can get to every goal area for the map (hostages or bomb site). Requires sv_cheats 1 Server only"),
                Command::new("nav_check_file_consistency", Vec::new(), "Scans the maps directory and reports any missing/out-of-date navigation files. Requires sv_cheats 1 Server only"),
                Command::new("nav_check_floor", Vec::new(), "Updates the blocked/unblocked status for every nav area. Server only"),
                Command::new("nav_check_stairs", Vec::new(), "Update the nav mesh STAIRS attribute Requires sv_cheats 1 Server only Modified in v1.34.7.9"),
                Command::new("nav_chop_selected", Vec::new(), "Chops all selected areas into their component 1x1 areas Requires sv_cheats 1 Server only"),
                Command::new("nav_clear_attribute", Vec::new(), "Remove given nav attribute from all areas in the selected set. Requires sv_cheats 1 Server only"),
                Command::new("nav_clear_selected_set", Vec::new(), "Clear the selected set. Requires sv_cheats 1 Server only"),
                Command::new("nav_clear_walkable_marks", Vec::new(), "Erase any previously placed walkable positions. Requires sv_cheats 1 Server only"),
                Command::new("nav_compress_id", Vec::new(), "Re-orders area and ladder ID's so they are continuous. Requires sv_cheats 1 Server only"),
                Command::new("nav_connect", Vec::new(), "To connect two Areas, mark the first Area, highlight the second Area, then invoke the connect command. Note that this creates a ONE-WAY connection from the first to the second Area. To make a two-way connection, also connect the second area to the first. Requires sv_cheats 1 Server only"),
                Command::new("nav_coplanar_slope_limit", Vec::new(), "Default: 0.99 Requires sv_cheats 1 Server only"),
                Command::new("nav_coplanar_slope_limit_displacement", Vec::new(), "Default: 0.7 Requires sv_cheats 1 Server only"),
                Command::new("nav_corner_adjust_adjacent", Vec::new(), "Default: 18radius used to raise/lower corners in nearby areas when raising/lowering corners. Requires sv_cheats 1 Server only"),
                Command::new("nav_corner_lower", Vec::new(), "Lower the selected corner of the currently marked Area. Requires sv_cheats 1 Server only"),
                Command::new("nav_corner_place_on_ground", Vec::new(), "Places the selected corner of the currently marked Area on the ground. Requires sv_cheats 1 Server only"),
                Command::new("nav_corner_raise", Vec::new(), "Raise the selected corner of the currently marked Area. Requires sv_cheats 1 Server only"),
                Command::new("nav_corner_select", Vec::new(), "Select a corner of the currently marked Area. Use multiple times to access all four corners. Requires sv_cheats 1 Server only"),
                Command::new("nav_create_area_at_feet", Vec::new(), "Default: 0 Anchor nav_begin_area Z to editing player's feet Requires sv_cheats 1 Server only"),
                Command::new("nav_create_place_on_ground", Vec::new(), "Default: 0 If true, nav areas will be placed flush with the ground when created by hand. Requires sv_cheats 1 Server only"),
                Command::new("nav_crouch", Vec::new(), "Toggles the 'must crouch in this area' flag used by the AI system. Requires sv_cheats 1 Server only"),
                Command::new("nav_debug_blocked", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("nav_delete", Vec::new(), "Deletes the currently highlighted Area. Requires sv_cheats 1 Server only"),
                Command::new("nav_delete_marked", Vec::new(), "Deletes the currently marked Area (if any). Requires sv_cheats 1 Server only"),
                Command::new("nav_disconnect", Vec::new(), "To disconnect two Areas, mark an Area, highlight a second Area, then invoke the disconnect command. This will remove all connections between the two Areas. Requires sv_cheats 1 Server only"),
                Command::new("nav_displacement_test", Vec::new(), "Default: 10000 Checks for nodes embedded in displacements (useful for in-development maps) Requires sv_cheats 1 Server only"),
                Command::new("nav_dont_hide", Vec::new(), "Toggles the 'area is not suitable for hiding spots' flag used by the AI system. Requires sv_cheats 1 Server only"),
                Command::new("nav_draw_limit", Vec::new(), "Default: 500 The maximum number of areas to draw in edit mode Requires sv_cheats 1 Server only"),
                Command::new("nav_edit", Vec::new(), "Default: 0 Set to one to interactively edit the Navigation Mesh. Set to zero to leave edit mode. Requires sv_cheats 1 Server only"),
                Command::new("nav_end_area", Vec::new(), "Defines the second corner of a new Area or Ladder and creates it. Requires sv_cheats 1 Server only"),
                Command::new("nav_end_deselecting", Vec::new(), "Stop continuously removing from the selected set. Requires sv_cheats 1 Server only"),
                Command::new("nav_end_drag_deselecting", Vec::new(), "Stop dragging a selection area. Requires sv_cheats 1 Server only"),
                Command::new("nav_end_drag_selecting", Vec::new(), "Stop dragging a selection area. Requires sv_cheats 1 Server only"),
                Command::new("nav_end_selecting", Vec::new(), "Stop continuously adding to the selected set. Requires sv_cheats 1 Server only"),
                Command::new("nav_end_shift_xy", Vec::new(), "Finish shifting the Selected Set. Requires sv_cheats 1 Server only"),
                Command::new("nav_flood_select", Vec::new(), "Selects the current Area and all Areas connected to it, recursively. To clear a selection, use this command again. Requires sv_cheats 1 Server only"),
                Command::new("nav_gen_cliffs_approx", Vec::new(), "Mark cliff areas, post-processing approximation Requires sv_cheats 1 Server only"),
                Command::new("nav_generate", Vec::new(), "Generate a Navigation Mesh for the current map and save it to disk. Requires sv_cheats 1 Server only"),
                Command::new("nav_generate_fencetops", Vec::new(), "Default: 1 Autogenerate nav areas on fence and obstacle tops Requires sv_cheats 1 Server only"),
                Command::new("nav_generate_fixup_jump_areas", Vec::new(), "Default: 1 Convert obsolete jump areas into 2-way connections Requires sv_cheats 1 Server only"),
                Command::new("nav_generate_incremental", Vec::new(), "Generate a Navigation Mesh for the current map and save it to disk. Requires sv_cheats 1 Server only"),
                Command::new("nav_generate_incremental_range", Vec::new(), "Default: 2000 Requires sv_cheats 1 Server only"),
                Command::new("nav_generate_incremental_tolerance", Vec::new(), "Default: 0 Z tolerance for adding new nav areas. Requires sv_cheats 1 Server only"),
                Command::new("nav_jump", Vec::new(), "Toggles the 'traverse this area by jumping' flag used by the AI system. Requires sv_cheats 1 Server only"),
                Command::new("nav_ladder_flip", Vec::new(), "Flips the selected ladder's direction. Requires sv_cheats 1 Server only"),
                Command::new("nav_load", Vec::new(), "Loads the Navigation Mesh for the current map. Requires sv_cheats 1 Server only"),
                Command::new("nav_lower_drag_volume_max", Vec::new(), "Lower the top of the drag select volume. Requires sv_cheats 1 Server only"),
                Command::new("nav_lower_drag_volume_min", Vec::new(), "Lower the bottom of the drag select volume. Requires sv_cheats 1 Server only"),
                Command::new("nav_make_sniper_spots", Vec::new(), "Chops the marked area into disconnected sub-areas suitable for sniper spots. Requires sv_cheats 1 Server only"),
                Command::new("nav_mark", Vec::new(), "Marks the Area or Ladder under the cursor for manipulation by subsequent editing commands. Requires sv_cheats 1 Server only"),
                Command::new("nav_mark_attribute", Vec::new(), "Set nav attribute for all areas in the selected set. Requires sv_cheats 1 Server only"),
                Command::new("nav_mark_unnamed", Vec::new(), "Mark an Area with no Place name. Useful for finding stray areas missed when Place Painting. Requires sv_cheats 1 Server only"),
                Command::new("nav_mark_walkable", Vec::new(), "Mark the current location as a walkable position. These positions are used as seed locations when sampling the map to generate a Navigation Mesh. Requires sv_cheats 1 Server only"),
                Command::new("nav_max_view_distance", Vec::new(), "Default: 0 Maximum range for precomputed nav mesh visibility (0 = default 1500 units) Requires sv_cheats 1 Server only"),
                Command::new("nav_max_vis_delta_list_length", Vec::new(), "Default: 64 Requires sv_cheats 1 Server only"),
                Command::new("nav_merge", Vec::new(), "To merge two Areas into one, mark the first Area, highlight the second by pointing your cursor at it, and invoke the merge command. Requires sv_cheats 1 Server only"),
                Command::new("nav_merge_mesh", Vec::new(), "Merges a saved selected set into the current mesh. Requires sv_cheats 1 Server only"),
                Command::new("nav_no_hostages", Vec::new(), "Toggles the 'hostages cannot use this area' flag used by the AI system. Requires sv_cheats 1 Server only"),
                Command::new("nav_no_jump", Vec::new(), "Toggles the 'dont jump in this area' flag used by the AI system. Requires sv_cheats 1 Server only"),
                Command::new("nav_place_floodfill", Vec::new(), "Sets the Place of the Area under the cursor to the curent Place, and 'flood-fills' the Place to all adjacent Areas. Flood-filling stops when it hits an Area with the same Place, or a different Place than that of the initial Area. Requires sv_cheats 1 Server only"),
                Command::new("nav_place_list", Vec::new(), "Lists all place names used in the map. Requires sv_cheats 1 Server only"),
                Command::new("nav_place_pick", Vec::new(), "Sets the current Place to the Place of the Area under the cursor. Requires sv_cheats 1 Server only"),
                Command::new("nav_place_replace", Vec::new(), "Replaces all instances of the first place with the second place. Requires sv_cheats 1 Server only"),
                Command::new("nav_place_set", Vec::new(), "Sets the Place of all selected areas to the current Place. Requires sv_cheats 1 Server only"),
                Command::new("nav_potentially_visible_dot_tolerance", Vec::new(), "Default: 0.98 Requires sv_cheats 1 Server only"),
                Command::new("nav_precise", Vec::new(), "Toggles the 'dont avoid obstacles' flag used by the AI system. Requires sv_cheats 1 Server only"),
                Command::new("nav_quicksave", Vec::new(), "Default: 0 Set to one to skip the time consuming phases of the analysis. Useful for data collection and testing. Requires sv_cheats 1 Server only"),
                Command::new("nav_raise_drag_volume_max", Vec::new(), "Raise the top of the drag select volume. Requires sv_cheats 1 Server only"),
                Command::new("nav_raise_drag_volume_min", Vec::new(), "Raise the bottom of the drag select volume. Requires sv_cheats 1 Server only"),
                Command::new("nav_recall_selected_set", Vec::new(), "Re-selects the stored selected set. Requires sv_cheats 1 Server only"),
                Command::new("nav_remove_from_selected_set", Vec::new(), "Remove current area from the selected set. Requires sv_cheats 1 Server only"),
                Command::new("nav_remove_jump_areas", Vec::new(), "Removes legacy jump areas, replacing them with connections. Requires sv_cheats 1 Server only"),
                Command::new("nav_run", Vec::new(), "Toggles the 'traverse this area by running' flag used by the AI system. Requires sv_cheats 1 Server only"),
                Command::new("nav_save", Vec::new(), "Saves the current Navigation Mesh to disk. Requires sv_cheats 1 Server only"),
                Command::new("nav_save_selected", Vec::new(), "Writes the selected set to disk for merging into another mesh via nav_merge_mesh. Requires sv_cheats 1 Server only"),
                Command::new("nav_select_blocked_areas", Vec::new(), "Adds all blocked areas to the selected set Requires sv_cheats 1 Server only"),
                Command::new("nav_select_damaging_areas", Vec::new(), "Adds all damaging areas to the selected set Requires sv_cheats 1 Server only"),
                Command::new("nav_select_half_space", Vec::new(), "Selects any areas that intersect the given half-space. Requires sv_cheats 1 Server only"),
                Command::new("nav_select_invalid_areas", Vec::new(), "Adds all invalid areas to the Selected Set. Requires sv_cheats 1 Server only"),
                Command::new("nav_select_obstructed_areas", Vec::new(), "Adds all obstructed areas to the selected set Requires sv_cheats 1 Server only"),
                Command::new("nav_select_overlapping", Vec::new(), "Selects nav areas that are overlapping others. Server only"),
                Command::new("nav_select_radius", Vec::new(), "Adds all areas in a radius to the selection set Requires sv_cheats 1 Server only"),
                Command::new("nav_select_stairs", Vec::new(), "Adds all stairway areas to the selected set Requires sv_cheats 1 Server only"),
                Command::new("nav_selected_set_border_color", Vec::new(), "Default: 100 100 0 255 Color used to draw the selected set borders while editing. Requires sv_cheats 1 Server only"),
                Command::new("nav_selected_set_color", Vec::new(), "Default: 255 255 200 96 Color used to draw the selected set background while editing. Requires sv_cheats 1 Server only"),
                Command::new("nav_set_place_mode", Vec::new(), "Sets the editor into or out of Place mode. Place mode allows labelling of Area with Place names. Requires sv_cheats 1 Server only"),
                Command::new("nav_shift", Vec::new(), "Shifts the selected areas by the specified amount Requires sv_cheats 1 Server only"),
                Command::new("nav_show_approach_points", Vec::new(), "Default: 0 Show Approach Points in the Navigation Mesh. Requires sv_cheats 1 Server only"),
                Command::new("nav_show_area_info", Vec::new(), "Default: 0.5 Duration in seconds to show nav area ID and attributes while editing Requires sv_cheats 1 Server only"),
                Command::new("nav_show_compass", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("nav_show_continguous", Vec::new(), "Default: 0 Highlight non-contiguous connections Requires sv_cheats 1 Server only"),
                Command::new("nav_show_danger", Vec::new(), "Default: 0 Show current 'danger' levels. Requires sv_cheats 1 Server only"),
                Command::new("nav_show_light_intensity", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("nav_show_node_grid", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("nav_show_node_id", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("nav_show_nodes", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("nav_show_player_counts", Vec::new(), "Default: 0 Show current player counts in each area. Requires sv_cheats 1 Server only"),
                Command::new("nav_show_potentially_visible", Vec::new(), "Default: 0 Show areas that are potentially visible from the current nav area Requires sv_cheats 1 Server only"),
                Command::new("nav_simplify_selected", Vec::new(), "Chops all selected areas into their component 1x1 areas and re-merges them together into larger areas Requires sv_cheats 1 Server only"),
                Command::new("nav_slope_limit", Vec::new(), "Default: 0.7 The ground unit normal's Z component must be greater than this for nav areas to be generated. Requires sv_cheats 1 Server only"),
                Command::new("nav_slope_tolerance", Vec::new(), "Default: 0.1 The ground unit normal's Z component must be this close to the nav area's Z component to be generated. Requires sv_cheats 1 Server only"),
                Command::new("nav_snap_to_grid", Vec::new(), "Default: 0 Snap to the nav generation grid when creating new nav areas Requires sv_cheats 1 Server only"),
                Command::new("nav_solid_props", Vec::new(), "Default: 0 Make props solid to nav generation/editing Requires sv_cheats 1 Server only"),
                Command::new("nav_splice", Vec::new(), "To splice, mark an area, highlight a second area, then invoke the splice command to create a new, connected area between them. Requires sv_cheats 1 Server only"),
                Command::new("nav_split", Vec::new(), "To split an Area into two, align the split line using your cursor and invoke the split command. Requires sv_cheats 1 Server only"),
                Command::new("nav_split_place_on_ground", Vec::new(), "Default: 0 If true, nav areas will be placed flush with the ground when split. Requires sv_cheats 1 Server only"),
                Command::new("nav_stand", Vec::new(), "Toggles the 'stand while hiding' flag used by the AI system. Requires sv_cheats 1 Server only"),
                Command::new("nav_stop", Vec::new(), "Toggles the 'must stop when entering this area' flag used by the AI system. Requires sv_cheats 1 Server only"),
                Command::new("nav_store_selected_set", Vec::new(), "Stores the current selected set for later retrieval. Requires sv_cheats 1 Server only"),
                Command::new("nav_strip", Vec::new(), "Strips all Hiding Spots, Approach Points, and Encounter Spots from the current Area. Requires sv_cheats 1 Server only"),
                Command::new("nav_subdivide", Vec::new(), "Subdivides all selected areas. Requires sv_cheats 1 Server only"),
                Command::new("nav_test_node", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("nav_test_node_crouch", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("nav_test_node_crouch_dir", Vec::new(), "Default: 4 Requires sv_cheats 1 Server only"),
                Command::new("nav_test_stairs", Vec::new(), "Test the selected set for being on stairs Requires sv_cheats 1 Server only"),
                Command::new("nav_toggle_deselecting", Vec::new(), "Start or stop continuously removing from the selected set. Requires sv_cheats 1 Server only"),
                Command::new("nav_toggle_in_selected_set", Vec::new(), "Remove current area from the selected set. Requires sv_cheats 1 Server only"),
                Command::new("nav_toggle_place_mode", Vec::new(), "Toggle the editor into and out of Place mode. Place mode allows labelling of Area with Place names. Requires sv_cheats 1 Server only"),
                Command::new("nav_toggle_place_painting", Vec::new(), "Toggles Place Painting mode. When Place Painting, pointing at an Area will 'paint' it with the current Place. Requires sv_cheats 1 Server only"),
                Command::new("nav_toggle_selected_set", Vec::new(), "Toggles all areas into/out of the selected set. Requires sv_cheats 1 Server only"),
                Command::new("nav_toggle_selecting", Vec::new(), "Start or stop continuously adding to the selected set. Requires sv_cheats 1 Server only"),
                Command::new("nav_transient", Vec::new(), "Toggles the 'area is transient and may become blocked' flag used by the AI system. Requires sv_cheats 1 Server only"),
                Command::new("nav_unmark", Vec::new(), "Clears the marked Area or Ladder. Requires sv_cheats 1 Server only"),
                Command::new("nav_update_blocked", Vec::new(), "Updates the blocked/unblocked status for every nav area. Server only"),
                Command::new("nav_update_lighting", Vec::new(), "Recomputes lighting values Requires sv_cheats 1 Server only"),
                Command::new("nav_update_visibility_on_edit", Vec::new(), "Default: 0 If nonzero editing the mesh will incrementally recompue visibility Requires sv_cheats 1 Server only"),
                Command::new("nav_use_place", Vec::new(), "If used without arguments, all available Places will be listed. If a Place argument is given, the current Place is set. Requires sv_cheats 1 Server only"),
                Command::new("nav_walk", Vec::new(), "Toggles the 'traverse this area by walking' flag used by the AI system. Requires sv_cheats 1 Server only"),
                Command::new("nav_warp_to_mark", Vec::new(), "Warps the player to the marked area. Requires sv_cheats 1 Server only"),
                Command::new("nav_world_center", Vec::new(), "Centers the nav mesh in the world Requires sv_cheats 1 Server only"),
                Command::new("nextmap_print_enabled", Vec::new(), "Default: 0 When enabled prints next map to clients Server only New in v1.34.0.0"),
                Command::new("noclip", Vec::new(), "Toggle. Player becomes non-solid and flies. Optional argument of 0 or 1 to force enable/disable Requires sv_cheats 1 Server only"),
                Command::new("noclip_fixup", Vec::new(), "Default: 1 Requires sv_cheats 1 Server only"),
                Command::new("notarget", Vec::new(), "Toggle. Player becomes hidden to NP Cs. Requires sv_cheats 1 Server only"),
                Command::new("npc_ally_deathmessage", Vec::new(), "Default: 1 Requires sv_cheats 1 Server only"),
                Command::new("npc_ammo_deplete", Vec::new(), "Subtracts half of the target's ammo Server only"),
                Command::new("npc_bipass", Vec::new(), "Displays the local movement attempts by the given NPC(s) (triangulation detours). Failed bypass routes are displayed in red, successful bypasses are shown in green. Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at. Requires sv_cheats 1 Server only"),
                Command::new("npc_combat", Vec::new(), "Displays text debugging information about the squad and enemy of the selected NPC  ( See Overlay Text) Arguments:   	{npc_name} / {npc class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("npc_conditions", Vec::new(), "Displays all the current AI conditions that an NPC has in the overlay text. Arguments:   	{npc_name} / {npc class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("npc_create", Vec::new(), "Creates an NPC of the given type where the player is looking (if the given NPC can actually stand at that location). Arguments:	[npc_class_name] [name of npc (optional) ] [addon type (optional) ] [name of addon (optional) ] Requires sv_cheats 1 Server only"),
                Command::new("npc_create_aimed", Vec::new(), "Creates an NPC aimed away from the player of the given type where the player is looking (if the given NPC can actually stand at that location). Note that this only works for npc classes that are already in the world. You can not create an entity that doesn't have an instance in the level. Arguments:	{npc_class_name} Requires sv_cheats 1 Server only"),
                Command::new("npc_destroy", Vec::new(), "Removes the given NPC(s) from the universe Arguments:   	{npc_name} / {npc_class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("npc_destroy_unselected", Vec::new(), "Removes all NP Cs from the universe that aren't currently selected Requires sv_cheats 1 Server only"),
                Command::new("npc_enemies", Vec::new(), "Shows memory of NPC. Draws an X on top of each memory. Eluded entities drawn in blue (don't know where it went) Unreachable entities drawn in green (can't get to it) Current enemy drawn in red Current target entity drawn in magenta All other entities drawn in pink Arguments:   	{npc_name} / {npc class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("npc_focus", Vec::new(), "Displays red line to NPC's enemy (if has one) and blue line to NPC's target entity (if has one) Arguments:   	{npc_name} / {npc class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("npc_freeze", Vec::new(), "Selected NPC(s) will freeze in place (or unfreeze). If there are no selected NP Cs, uses the NPC under the crosshair. Arguments:	-none- Requires sv_cheats 1 Server only"),
                Command::new("npc_freeze_unselected", Vec::new(), "Freeze all NP Cs not selected Server only"),
                Command::new("npc_go", Vec::new(), "Selected NPC(s) will go to the location that the player is looking (shown with a purple box) Arguments:	-none- Requires sv_cheats 1 Server only"),
                Command::new("npc_go_random", Vec::new(), "Sends all selected NPC(s) to a random node. Arguments:   	-none- Requires sv_cheats 1 Server only"),
                Command::new("npc_heal", Vec::new(), "Heals the target back to full health Server only"),
                Command::new("npc_height_adjust", Vec::new(), "Default: 1 Enable test mode for ik height adjustment Server only"),
                Command::new("npc_kill", Vec::new(), "Kills the given NPC(s) Arguments:   	{npc_name} / {npc_class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("npc_nearest", Vec::new(), "Draw's a while box around the NPC(s) nearest node Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("npc_relationships", Vec::new(), "Displays the relationships between this NPC and all others. Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("npc_reset", Vec::new(), "Reloads schedules for all NPC's from their script files Arguments:	-none- Requires sv_cheats 1 Server only"),
                Command::new("npc_route", Vec::new(), "Displays the current route of the given NPC as a line on the screen. Waypoints along the route are drawn as small cyan rectangles. Line is color coded in the following manner: Blue	- path to a node Cyan	- detour around an object (triangulation) Red	- jump Maroon - path to final target position Arguments:   	{npc_name} / {npc_class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("npc_select", Vec::new(), "Select or deselects the given NPC(s) for later manipulation. Selected NPC's are shown surrounded by a red translucent box Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("npc_set_freeze", Vec::new(), "Selected NPC(s) will freeze in place (or unfreeze). If there are no selected NP Cs, uses the NPC under the crosshair. Arguments:	-none- Requires sv_cheats 1 Server only"),
                Command::new("npc_set_freeze_unselected", Vec::new(), "Freeze all NP Cs not selected Server only"),
                Command::new("npc_squads", Vec::new(), "Obsolete. Replaced by npc_combat Requires sv_cheats 1 Server only"),
                Command::new("npc_steering", Vec::new(), "Displays the steering obstructions of the NPC (used to perform local avoidance) Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("npc_steering_all", Vec::new(), "Displays the steering obstructions of all NP Cs (used to perform local avoidance) Requires sv_cheats 1 Server only"),
                Command::new("npc_task_text", Vec::new(), "Outputs text debugging information to the console about the all the tasks + break conditions of the selected NPC current schedule Arguments:   	{npc_name} / {npc class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("npc_tasks", Vec::new(), "Displays detailed text debugging information about the all the tasks of the selected NPC current schedule ( See Overlay Text) Arguments:   	{npc_name} / {npc class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("npc_teleport", Vec::new(), "Selected NPC will teleport to the location that the player is looking (shown with a purple box) Arguments:	-none- Requires sv_cheats 1 Server only"),
                Command::new("npc_thinknow", Vec::new(), "Trigger NPC to think Server only"),
                Command::new("npc_viewcone", Vec::new(), "Displays the viewcone of the NPC (where they are currently looking and what the extents of there vision is) Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("observer_use", Vec::new(), "Server only"),
                Command::new("particle_test_attach_attachment", Vec::new(), "Default: 0 Attachment index for attachment mode Requires sv_cheats 1 Server only"),
                Command::new("particle_test_attach_mode", Vec::new(), "Default: follow_attachment Possible Values: 'start_at_attachment', 'follow_attachment', 'start_at_origin', 'follow_origin' Requires sv_cheats 1 Server only"),
                Command::new("particle_test_file", Vec::new(), "Default: Name of the particle system to dynamically spawn Requires sv_cheats 1 Server only"),
                Command::new("particle_test_start", Vec::new(), "Dispatches the test particle system with the parameters specified in particle_test_file, particle_test_attach_mode and particle_test_attach_param on the entity the player is looking at. Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("particle_test_stop", Vec::new(), "Stops all particle systems on the selected entities. Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at Requires sv_cheats 1 Server only"),
                Command::new("phys_show_active", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("physics_budget", Vec::new(), "Times the cost of each active object Server only"),
                Command::new("physics_constraints", Vec::new(), "Highlights constraint system graph for an entity Server only"),
                Command::new("physics_debug_entity", Vec::new(), "Dumps debug info for an entity Server only"),
                Command::new("physics_highlight_active", Vec::new(), "Turns on the absbox for all active physics objects Server only"),
                Command::new("physics_report_active", Vec::new(), "Lists all active physics objects Server only"),
                Command::new("physics_select", Vec::new(), "Dumps debug info for an entity Server only"),
                Command::new("picker", Vec::new(), "Toggles 'picker' mode. When picker is on, the bounding box, pivot and debugging text is displayed for whatever entity the player is looking at. Arguments:	full - enables all debug information Requires sv_cheats 1 Server only"),
                Command::new("player_debug_print_damage", Vec::new(), "Default: 0 When true, print amount and type of all damage received by player to console. Requires sv_cheats 1 Server only"),
                Command::new("print_mapgroup_sv", Vec::new(), "Prints the current mapgroup and the contained maps Server only"),
                Command::new("prop_debug", Vec::new(), "Toggle prop debug mode. If on, props will show colorcoded bounding boxes. Red means ignore all damage. White means respond physically to damage but never break. Green maps health in the range of 100 down to 1. Requires sv_cheats 1 Server only"),
                Command::new("prop_dynamic_create", Vec::new(), "Creates a dynamic prop with a specific .mdl aimed away from where the player is looking. Arguments: {.mdl name} Requires sv_cheats 1 Server only"),
                Command::new("prop_physics_create", Vec::new(), "Creates a physics prop with a specific .mdl aimed away from where the player is looking. Arguments: {.mdl name} Requires sv_cheats 1 Server only"),
                Command::new("r_ JeepFOV", Vec::new(), "Default: 90 Requires sv_cheats 1 Server only"),
                Command::new("r_vehicle Brake Rate", Vec::new(), "Default: 1.5 Requires sv_cheats 1 Server only"),
                Command::new("radarvisdistance", Vec::new(), "Default: 1000.0f Min: 10 at this distance and beyond you need to be point right at someone to see them Requires sv_cheats 1 Server only"),
                Command::new("radarvismaxdot", Vec::new(), "Default: .996 Min: 0 , Max: 1how closely you have to point at someone to see them beyond max distance Requires sv_cheats 1 Server only"),
                Command::new("radarvismethod", Vec::new(), "Default: 1 Min: 0 , Max: 10 for traditional method, 1 for more realistic method Requires sv_cheats 1 Server only"),
                Command::new("radarvispow", Vec::new(), "Default: .4 the degree to which you can point away from a target, and still see them on radar. Requires sv_cheats 1 Server only"),
                Command::new("report_entities", Vec::new(), "Lists all entities Server only"),
                Command::new("report_simthinklist", Vec::new(), "Lists all simulating/thinking entities Server only"),
                Command::new("report_soundpatch", Vec::new(), "reports sound patch count Server only"),
                Command::new("report_touchlinks", Vec::new(), "Lists all touchlinks Server only"),
                Command::new("reset_expo", Vec::new(), "Reset player scores, player controls, team scores, and end the round Requires sv_cheats 1 Server only"),
                Command::new("respawn_entities", Vec::new(), "Respawn all the entities in the map. Requires sv_cheats 1 Server only"),
                Command::new("rr_followup_maxdist", Vec::new(), "Default: 1800 'then ANY' or 'then ALL' response followups will be dispatched only to characters within this distance. Requires sv_cheats 1 Server only"),
                Command::new("rr_forceconcept", Vec::new(), "fire a response concept directly at a given character.USAGE: rr_forceconcept <target> <concept> 'criteria1:value1,criteria2:value2,...'criteria values are optional. Requires sv_cheats 1 Server only"),
                Command::new("rr_reloadresponsesystems", Vec::new(), "Reload all response system scripts. Server only"),
                Command::new("rr_remarkable_max_distance", Vec::new(), "Default: 1200 A Is will not even consider remarkarbles that are more than this many units away. Requires sv_cheats 1 Server only"),
                Command::new("rr_remarkable_world_entities_replay_limit", Vec::new(), "Default: 1TLK_REMAR Ks will be dispatched no more than this many times for any given info_remarkable Requires sv_cheats 1 Server only"),
                Command::new("rr_remarkables_enabled", Vec::new(), "Default: 1 If 1, polling for info_remarkables and issuances of TLK_REMARK is enabled. Requires sv_cheats 1 Server only"),
                Command::new("rr_thenany_score_slop", Vec::new(), "Default: 0.0 When computing respondents for a 'THEN ANY' rule, all rule-matching scores within this much of the best score will be considered. Requires sv_cheats 1 Server only"),
                Command::new("say", Vec::new(), "Display player message Server only"),
                Command::new("say_team", Vec::new(), "Display player message to team Server only"),
                Command::new("scene_flush", Vec::new(), "Flush all .vcds from the cache and reload from disk. Server only"),
                Command::new("scene_playvcd", Vec::new(), "Play the given VCD as an instanced scripted scene. Requires sv_cheats 1 Server only"),
                Command::new("scene_showfaceto", Vec::new(), "Default: 0 When playing back, show the directions of faceto events. Server only"),
                Command::new("scene_showlook", Vec::new(), "Default: 0 When playing back, show the directions of look events. Server only"),
                Command::new("scene_showmoveto", Vec::new(), "Default: 0 When moving, show the end location. Server only"),
                Command::new("scene_showunlock", Vec::new(), "Default: 0 Show when a vcd is playing but normal AI is running. Server only"),
                Command::new("script", Vec::new(), "Run the text as a script Server only"),
                Command::new("script_debug", Vec::new(), "Connect the vscript VM to the script debugger Server only"),
                Command::new("script_dump_all", Vec::new(), "Dump the state of the VM to the console Server only"),
                Command::new("script_execute", Vec::new(), "Run a vscript file Server only"),
                Command::new("script_help", Vec::new(), "Output help for script functions, optionally with a search string Server only"),
                Command::new("script_reload_code", Vec::new(), "Execute a vscript file, replacing existing functions with the functions in the run script Server only"),
                Command::new("script_reload_entity_code", Vec::new(), "Execute all of this entity's V Scripts, replacing existing functions with the functions in the run scripts Server only"),
                Command::new("script_reload_think", Vec::new(), "Execute an activation script, replacing existing functions with the functions in the run script Server only"),
                Command::new("send_round_backup_file_list", Vec::new(), "Server only"),
                Command::new("server_game_time", Vec::new(), "Gives the game time in seconds (server's curtime) Server only"),
                Command::new("servercfgfile", Vec::new(), "Default: server.cfg Server only"),
                Command::new("setang", Vec::new(), "Snap player eyes to specified pitch yaw <roll:optional> (must have sv_cheats). Requires sv_cheats 1 Server only"),
                Command::new("setang_exact", Vec::new(), "Snap player eyes and orientation to specified pitch yaw <roll:optional> (must have sv_cheats). Requires sv_cheats 1 Server only"),
                Command::new("setmodel", Vec::new(), "Changes's player's model Requires sv_cheats 1 Server only"),
                Command::new("setpos", Vec::new(), "Move player to specified origin (must have sv_cheats). Requires sv_cheats 1 Server only"),
                Command::new("setpos_exact", Vec::new(), "Move player to an exact specified origin (must have sv_cheats). Requires sv_cheats 1 Server only"),
                Command::new("setpos_player", Vec::new(), "Move specified player to specified origin (must have sv_cheats). Requires sv_cheats 1 Server only"),
                Command::new("shake", Vec::new(), "Shake the screen. Requires sv_cheats 1 Server only"),
                Command::new("showtriggers", Vec::new(), "Default: 0 Shows trigger brushes Requires sv_cheats 1 Server only"),
                Command::new("showtriggers_toggle", Vec::new(), "Toggle show triggers Requires sv_cheats 1 Server only"),
                Command::new("skip_next_map", Vec::new(), "Skips the next map in the map rotation for the server. Server only"),
                Command::new("snd_sos_show_server_xmit", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("soundscape_debug", Vec::new(), "Default: 0 When on, draws lines to all env_soundscape entities. Green lines show the active soundscape, red lines show soundscapes that aren't in range, and white lines show soundscapes that are in range, but not the active soundscape. Requires sv_cheats 1 Server only"),
                Command::new("soundscape_flush", Vec::new(), "Flushes the server &amp; client side soundscapes Server only"),
                Command::new("spec_allow_roaming", Vec::new(), "Default: 0 If nonzero, allow free-roaming spectator camera. Requires sv_cheats 1 Server only"),
                Command::new("spec_freeze_time_lock", Vec::new(), "Default: 2.0 Time players are prevented from skipping the freeze cam Server only"),
                Command::new("suitvolume", Vec::new(), "Default: 0.25 Server only"),
                Command::new("surfaceprop", Vec::new(), "Reports the surface properties at the cursor Requires sv_cheats 1 Server only"),
                Command::new("sv_allow_votes", Vec::new(), "Default: 1 Allow voting? Server only"),
                Command::new("sv_arms_race_vote_to_restart_disallowed_after", Vec::new(), "Default: 0 Arms Race gun level after which vote to restart is disallowed Server only"),
                Command::new("sv_auto_full_alltalk_during_warmup_half_end", Vec::new(), "Default: 1 When enabled will automatically turn on full all talk mode in warmup, at halftime and at the end of the match Server only New in v1.34.4.1"),
                Command::new("sv_benchmark_force_start", Vec::new(), "Force start the benchmark. This is only for debugging. It's better to set sv_benchmark to 1 and restart the level. Server only"),
                Command::new("sv_broadcast_ugc_download_progress_interval", Vec::new(), "Default: 8 Server only Modified in v1.33.1.0"),
                Command::new("sv_broadcast_ugc_downloads", Vec::new(), "Default: 0 Server only Modified in v1.33.1.0"),
                Command::new("sv_clearhinthistory", Vec::new(), "Clear memory of server side hints displayed to the player. Server only"),
                Command::new("sv_clockcorrection_msecs", Vec::new(), "Default: 30 The server tries to keep each player's m_n Tick Base withing this many msecs of the server absolute tickcount Server only"),
                Command::new("sv_cs_dump_econ_item_stringtable", Vec::new(), "sv_cs_dump_econ_item_stringtable Server only"),
                Command::new("sv_damage_print_enable", Vec::new(), "Default: 1 Turn this off to disable the player's damage feed in the console after getting killed. Server only"),
                Command::new("sv_dc_friends_reqd", Vec::new(), "Default: 0 Set this to 0 to allow direct connects to a game in progress even if no presents are present Server only"),
                Command::new("sv_debug_ugc_downloads", Vec::new(), "Default: 0 Server only Modified in v1.33.1.0"),
                Command::new("sv_force_transmit_players", Vec::new(), "Default: 1 Will transmit players to all clients regardless of PVS checks. Server only"),
                Command::new("sv_game_mode_convars", Vec::new(), "Display the values of the convars for the current game_mode. Server only"),
                Command::new("sv_ignoregrenaderadio", Vec::new(), "Default: 0 Turn off Fire in the hole messages Server only"),
                Command::new("sv_kick_players_with_cooldown", Vec::new(), "Default: 1 (0: do not kick on insecure servers; 1: kick players with Untrusted status or convicted by Overwatch; 2: kick players with any cooldown) Server only Modified in v1.33.2.0"),
                Command::new("sv_lagcompensateself", Vec::new(), "Default: 0 Player can lag compensate themselves. Requires sv_cheats 1 Server only New in v1.34.5.2"),
                Command::new("sv_lagcompensationforcerestore", Vec::new(), "Default: 1 Don't test validity of a lag comp restore, just do it. Requires sv_cheats 1 Server only"),
                Command::new("sv_matchend_drops_enabled", Vec::new(), "Default: 1 Rewards gameplay time is always accumulated for players, but drops at the end of the match can be prevented Server only"),
                Command::new("sv_maxusrcmdprocessticks", Vec::new(), "Default: 16 Maximum number of client-issued usrcmd ticks that can be replayed in packet loss conditions, 0 to allow no restrictions Server only"),
                Command::new("sv_maxusrcmdprocessticks_warning", Vec::new(), "Default: -1 Print a warning when user commands get dropped due to insufficient usrcmd ticks allocated, number of seconds to throttle, negative disabled Server only"),
                Command::new("sv_pushaway_hostage_force", Vec::new(), "Default: 20000 How hard the hostage is pushed away from physics objects (falls off with inverse square of distance). Requires sv_cheats 1 Server only"),
                Command::new("sv_pushaway_max_hostage_force", Vec::new(), "Default: 1000 Maximum of how hard the hostage is pushed away from physics objects. Requires sv_cheats 1 Server only"),
                Command::new("sv_pvsskipanimation", Vec::new(), "Default: 1 Skips Setup Bones when npc's are outside the PVS Server only"),
                Command::new("sv_querycache_stats", Vec::new(), "Display status of the query cache (client only) Server only"),
                Command::new("sv_regeneration_force_on", Vec::new(), "Default: 0 Cheat to test regenerative health systems Requires sv_cheats 1 Server only"),
                Command::new("sv_remove_old_ugc_downloads", Vec::new(), "Default: 1 Server only"),
                Command::new("sv_showlagcompensation", Vec::new(), "Default: 0 Show lag compensated hitboxes whenever a player is lag compensated. Requires sv_cheats 1 Server only"),
                Command::new("sv_soundemitter_reload", Vec::new(), "Flushes the sounds.txt system Server only"),
                Command::new("sv_soundscape_printdebuginfo", Vec::new(), "print soundscapes Requires sv_cheats 1 Server only"),
                Command::new("sv_spawn_afk_bomb_drop_time", Vec::new(), "Default: 15 Players that have never moved since they spawned will drop the bomb after this amount of time. Server only"),
                Command::new("sv_ugc_manager_max_new_file_check_interval_secs", Vec::new(), "Default: 1000 Server only Modified in v1.33.1.0"),
                Command::new("sv_usercmd_custom_random_seed", Vec::new(), "Default: 1 When enabled server will populate an additional random seed independent of the client Server only New in v1.34.6.3 Modified in v1.34.6.4"),
                Command::new("sv_vote_allow_in_warmup", Vec::new(), "Default: 0 Allow voting during warmup? Server only"),
                Command::new("sv_vote_allow_spectators", Vec::new(), "Default: 0 Allow spectators to vote? Server only"),
                Command::new("sv_vote_command_delay", Vec::new(), "Default: 2 Max: 4.5 How long after a vote passes until the action happens Server only"),
                Command::new("sv_vote_creation_timer", Vec::new(), "Default: 120 How often someone can individually call a vote. Server only"),
                Command::new("sv_vote_failure_timer", Vec::new(), "Default: 300A vote that fails cannot be re-submitted for this long Server only"),
                Command::new("sv_vote_issue_kick_allowed", Vec::new(), "Default: 1 Can people hold votes to kick players from the server? Server only"),
                Command::new("sv_vote_issue_loadbackup_allowed", Vec::new(), "Default: 1 Can people hold votes to load match from backup? Server only"),
                Command::new("sv_vote_kick_ban_duration", Vec::new(), "Default: 15 How long should a kick vote ban someone from the server? (in minutes) Server only"),
                Command::new("sv_vote_quorum_ratio", Vec::new(), "Default: 0 .501 Min: 0 .01, Max: 1 The minimum ratio of players needed to vote on an issue to resolve it. Server only"),
                Command::new("sv_vote_timer_duration", Vec::new(), "Default: 15 How long to allow voting on an issue Server only"),
                Command::new("sv_workshop_allow_other_maps", Vec::new(), "Default: 1 When hosting a workshop collection, users can play other workshop map on this server when it is empty and then mapcycle into this server collection. Server only"),
                Command::new("test_dispatcheffect", Vec::new(), "Test a clientside dispatch effect. Usage: test_dispatcheffect <effect name> <distance away> <flags> <magnitude> <scale> Defaults are: <distance 1024> <flags 0> <magnitude 0> <scale 0> Requires sv_cheats 1 Server only"),
                Command::new("Test_E Handle", Vec::new(), "Requires sv_cheats 1 Server only"),
                Command::new("test_entity_blocker", Vec::new(), "Test command that drops an entity blocker out in front of the player. Requires sv_cheats 1 Server only"),
                Command::new("Test_ Init Random Entity Spawner", Vec::new(), "Requires sv_cheats 1 Server only"),
                Command::new("test_outtro_stats", Vec::new(), "Requires sv_cheats 1 Server only"),
                Command::new("Test_ Proxy Toggle_ Enable Proxy", Vec::new(), "Requires sv_cheats 1 Server only"),
                Command::new("Test_ Proxy Toggle_ Set Value", Vec::new(), "Requires sv_cheats 1 Server only"),
                Command::new("Test_ Randomize InPVS", Vec::new(), "Requires sv_cheats 1 Server only"),
                Command::new("Test_ Remove All Random Entities", Vec::new(), "Requires sv_cheats 1 Server only"),
                Command::new("Test_ Spawn Random Entities", Vec::new(), "Requires sv_cheats 1 Server only"),
                Command::new("timeleft", Vec::new(), "prints the time remaining in the match Server only"),
                Command::new("tv_allow_camera_man_steamid", Vec::new(), "Default: Allows tournament production cameraman to run csgo.exe -interactivecaster on SteamID 7650123456XXX and be the camera man. Server only New in v1.34.6.9"),
                Command::new("tv_allow_static_shots", Vec::new(), "Default: 1 Auto director uses fixed level cameras for shots Server only"),
                Command::new("tv_delay", Vec::new(), "Default: 10 Min: 0 , Max: 120GOTV broadcast delay in seconds Server only"),
                Command::new("tv_delaymapchange", Vec::new(), "Default: 1 Delays map change until broadcast is complete Server only"),
                Command::new("tv_relayradio", Vec::new(), "Default: 0 Relay team radio commands to TV: 0 =off, 1=on Server only"),
                Command::new("tv_relaytextchat", Vec::new(), "Default: 1 Relay text chat data: 0 =off, 1=say, 2=say+say_team Server only"),
                Command::new("tv_time_remaining", Vec::new(), "Print remaining tv broadcast time Server only"),
                Command::new("tweak_ammo_impulses", Vec::new(), "Allow real-time tweaking of the ammo impulse values. Requires sv_cheats 1 Server only"),
                Command::new("use", Vec::new(), "Use a particular weapon	 Arguments: <weapon_name> Server only"),
                Command::new("vehicle_flushscript", Vec::new(), "Flush and reload all vehicle scripts Server only"),
                Command::new("vis_force", Vec::new(), "Default: 0 Requires sv_cheats 1 Server only"),
                Command::new("vismon_poll_frequency", Vec::new(), "Default: .5 Requires sv_cheats 1 Server only"),
                Command::new("vismon_trace_limit", Vec::new(), "Default: 12 Requires sv_cheats 1 Server only"),
                Command::new("voice_player_speaking_delay_threshold", Vec::new(), "Default: 0 .5f Requires sv_cheats 1 Server only"),
                Command::new("voxeltree_box", Vec::new(), "View entities in the voxel-tree inside box < Vector(min), Vector(max)>. Requires sv_cheats 1 Server only"),
                Command::new("voxeltree_playerview", Vec::new(), "View entities in the voxel-tree at the player position. Requires sv_cheats 1 Server only"),
                Command::new("voxeltree_sphere", Vec::new(), "View entities in the voxel-tree inside sphere < Vector(center), float(radius)>. Requires sv_cheats 1 Server only"),
                Command::new("voxeltree_view", Vec::new(), "View entities in the voxel-tree. Requires sv_cheats 1 Server only"),
                Command::new("wc_air_edit_further", Vec::new(), "When in WC edit mode and editing air nodes,  moves position of air node crosshair and placement location further away from player Requires sv_cheats 1 Server only"),
                Command::new("wc_air_edit_nearer", Vec::new(), "When in WC edit mode and editing air nodes,  moves position of air node crosshair and placement location nearer to from player Requires sv_cheats 1 Server only"),
                Command::new("wc_air_node_edit", Vec::new(), "When in WC edit mode, toggles laying down or air nodes instead of ground nodes Requires sv_cheats 1 Server only"),
                Command::new("wc_create", Vec::new(), "When in WC edit mode, creates a node where the player is looking if a node is allowed at that location for the currently selected hull size (see ai_next_hull) Requires sv_cheats 1 Server only"),
                Command::new("wc_destroy", Vec::new(), "When in WC edit mode, destroys the node that the player is nearest to looking at.  ( The node will be highlighted by a red box). Requires sv_cheats 1 Server only"),
                Command::new("wc_destroy_undo", Vec::new(), "When in WC edit mode restores the last deleted node Requires sv_cheats 1 Server only"),
                Command::new("wc_link_edit", Vec::new(), "Requires sv_cheats 1 Server only"),
                Command::new("weapon_reload_database", Vec::new(), "Reload the weapon database Requires sv_cheats 1 Server only"),
                Command::new("wipe_nav_attributes", Vec::new(), "Clear all nav attributes of selected area. Requires sv_cheats 1 Server only"),
                Command::new("workshop_start_map", Vec::new(), "Sets the first map to load once a workshop collection been hosted. Takes the file id of desired start map as a parameter. Server only"),
                Command::new("xbox_autothrottle", Vec::new(), "Default: 1 Server only"),
                Command::new("xbox_throttlebias", Vec::new(), "Default: 100 Server only"),
                Command::new("xbox_throttlespoof", Vec::new(), "Default: 200 Server only"),
        ],
        }
    }
}
